<?php
/**
 * MageWorx
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the MageWorx EULA that is bundled with
 * this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://www.mageworx.com/LICENSE-1.0.html
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade the extension
 * to newer versions in the future. If you wish to customize the extension
 * for your needs please refer to http://www.mageworx.com/ for more information
 *
 * @category   MageWorx
 * @package    MageWorx_CustomOptions
 * @copyright  Copyright (c) 2011 MageWorx (http://www.mageworx.com/)
 * @license    http://www.mageworx.com/LICENSE-1.0.html
 */

/**
 * Advanced Product Options extension
 *
 * @category   MageWorx
 * @package    MageWorx_CustomOptions
 * @author     MageWorx Dev Team
 */
/* @var $this Mage_Catalog_Block_Product_View_Options_Type_Select */
$_option = $this->getOption();
$helper = Mage::helper('customoptions');

	$more_option = PRSP_WForm_Model_OptionAttributes::getProductAttributes( $_option->getProductId(),$_option ); // define is it hase more_options
	// if it is the the more option than show our code only
$valuesHtml = $this->getValuesHtml();
if ($more_option){
	echo $more_option;
} if($valuesHtml):
$_group_id = PRSP_WForm_Model_OptionAttributes::getGroupId($_option->getId() );
?>
<div style="<? echo ($more_option) ? 'display:none;' :'' ?>" <?php if ($helper->hideDependentOption() && $_option->getIsDependent()) { ?>style="display: none;"<?php } ?>
		class="option<?php if ($helper->isSpecifyingCssClassEnabled()) echo ' '.$_option->getDivClass() ?> group_<?php echo $_group_id?>  <? echo ($more_option) ? 'more_option_vlues' :'' ?>"
		data-group="<?php echo $_group_id?>">
<dl>
<dt><label><?php echo $this->htmlEscape($_option->getTitle()) ?><?php if ($_option->getIsRequire(true)): ?><span class="required">&nbsp;*</span><?php endif; ?></label>
<?php if ($_option->getDescription()): ?><p class="note"><?php echo $_option->getDescription() ?></p><?php endif; ?></dt>
<dd class=" color_list lnone "<?php if ($_option->decoratedIsLast) { ?> last<?php } ?>">
    <?php echo $valuesHtml ?>
    <?php if ($_option->getIsRequire(true)): ?>
    <?php if ($_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_RADIO || $_option->getType() == Mage_Catalog_Model_Product_Option::OPTION_TYPE_CHECKBOX): ?>
                <span id="options-<?php echo $_option->getId() ?>-container"></span>
    <?php endif; ?>
    <?php endif; ?>
    <?php if ($helper->isQntyInputEnabled() && $_option->getQntyInput() && $_option->getType()!=Mage_Catalog_Model_Product_Option::OPTION_TYPE_CHECKBOX): ?>
        <span class="qty-holder">
            <label><?php echo $helper->getDefaultOptionQtyLabel() ?> <input type="text" class="input-text qty <?php if ($_option->getIsRequire(true)) echo 'validate-greater-than-zero'; else echo 'validate-zero-or-greater'; ?>" value="<?php echo ($_option->getOptionQty()?$_option->getOptionQty():1) ?>" maxlength="12" id="options_<?php echo $_option->getId() ?>_qty" name="options_<?php echo $_option->getId() ?>_qty" onchange="opConfig.reloadPrice(); <?php if ($_option->getOptionsSetQtyProduct()) { ?>optionsSetQtyProduct.setQty(<?php echo $_option->getId() ?>)<?php } ?>" onKeyPress="if(event.keyCode==13){opConfig.reloadPrice(); <?php if ($_option->getOptionsSetQtyProduct()) { ?>optionsSetQtyProduct.setQty(<?php echo $_option->getId() ?>)<?php } ?>}"></label>
        </span>
    <?php endif; ?>
</dd>
</dl>
</div>
<?php endif; ?>
